import tkinter as tk
# Some separate parts of this file were generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Canvas, Entry, Button, PhotoImage

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r'assets')

SCREENRESOLUTION_X = 1920
SCREENRESOLUTION_Y = 1080
WINDOWPOSITION_X = (SCREENRESOLUTION_X / 2) - (1440 / 2)
WINDOWPOSITION_Y = (SCREENRESOLUTION_Y / 2) - (924 / 1) + 425

BTN_GEBRUIKER = 1
BTN_ADMIN = 2
STATION_AMERSFOORT = 3
STATION_DENBOSCH = 4
STATION_UTRECHT = 5


def relative_to_assets(path: str) -> Path:
    testVar = ASSETS_PATH / Path(path)
    return testVar


class Opening:
    def __init__(self, master):
        super().__init__()  # Om de init van tk.Tk op te roepen

        self.master = master
        self.master.title("Stationszuil beginpagina")
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=1024,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        canvas.place(x=0, y=0)
        canvas.create_text(
            419.0,
            308.0,
            anchor="nw",
            text="Welke ervaring wilt u simuleren?",
            fill="#000000",
            font=("Public Sans", 40 * -1)
        )

        self.button_image_gebruiker = PhotoImage(
            file=relative_to_assets("button_gebruiker.png"))
        button_gebruiker = Button(
            image=self.button_image_gebruiker,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(BTN_GEBRUIKER),
            relief="flat"
        )
        button_gebruiker.place(
            x=64.0,
            y=544.0,
            width=355.0,
            height=99.0
        )

        self.button_image_zuil_amersfoort = PhotoImage(
            file=relative_to_assets("button_zuil_amersfoort.png"))
        button_zuil_amersfoort = Button(
            image=self.button_image_zuil_amersfoort,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(STATION_AMERSFOORT),
            relief="flat"
        )
        button_zuil_amersfoort.place(
            x=467.0,
            y=411.0,
            width=505.0,
            height=99.0
        )

        self.button_image_zuil_denbosch = PhotoImage(
            file=relative_to_assets("button_zuil_denbosch.png"))
        button_zuil_denbosch = Button(
            image=self.button_image_zuil_denbosch,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(STATION_DENBOSCH),
            relief="flat"
        )
        button_zuil_denbosch.place(
            x=467.0,
            y=544.0,
            width=505.0,
            height=99.0
        )

        self.button_image_zuil_utrecht = PhotoImage(
            file=relative_to_assets("button_zuil_utrecht.png"))
        button_zuil_utrecht = Button(
            image=self.button_image_zuil_utrecht,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(STATION_UTRECHT),
            relief="flat"
        )
        button_zuil_utrecht.place(
            x=467.0,
            y=677.0,
            width=505.0,
            height=99.0
        )

        self.button_image_admin = PhotoImage(
            file=relative_to_assets("button_admin.png"))
        button_admin = Button(
            image=self.button_image_admin,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(BTN_ADMIN),
            relief="flat"
        )
        button_admin.place(
            x=1020.0,
            y=544.0,
            width=355.0,
            height=99.0
        )

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        # NS Image at the top
        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            171.0,
            91.0,
            image=self.image_image_1
        )

    def new_window(self, button):
        self.master.destroy()
        self.master = tk.Tk()

        if button == BTN_GEBRUIKER:
            self.app = Gebruiker(self.master)
        elif button == BTN_ADMIN:
            self.app = Admin(self.master)
        elif button == STATION_AMERSFOORT:
            self.app = Zuil(self.master, STATION_AMERSFOORT)
        elif button == STATION_DENBOSCH:
            self.app = Zuil(self.master, STATION_DENBOSCH)
        elif button == STATION_UTRECHT:
            self.app = Zuil(self.master, STATION_UTRECHT)

        self.master.mainloop()


class Gebruiker:
    def __init__(self, master):
        super().__init__()  # Om de init van tk.Tk op te roepen
        self.master = master
        self.master.title("Gebruikerspagina Stationszuil")
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=924,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        self.button_image_verzend = PhotoImage(
            file=relative_to_assets("button_verzend.png"))
        button_verzend = Button(
            image=self.button_image_verzend,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("Nu moet ik parsedata aanspreken met inhoud"),
            relief="flat"
        )
        button_verzend.place(
            x=81.0,
            y=784.0,
            width=428.0,
            height=99.0
        )

        canvas.create_text(
            81.0,
            207.0,
            anchor="nw",
            text="Voer uw naam in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            81.0,
            368.0,
            anchor="nw",
            text="Voer uw bericht in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            171.0,
            91.0,
            image=self.image_image_1
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(
            295.0,
            320.0,
            image=self.entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=91.0,
            y=289.0,
            width=408.0,
            height=60.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_2 = canvas.create_image(
            601.0,
            585.5,
            image=self.entry_image_2
        )
        entry_2 = Entry(  # Hier nog met entry_2.get de gegevens opslaan
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=91.0,
            y=450.0,
            width=1020.0,
            height=269.0
        )


class Admin:
    def __init__(self, master):
        super().__init__()  # Om de init van tk.Tk op te roepen
        self.master = master
        self.master.title("Adminpagina Stationszuil")
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=924,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        self.button_image_afkeuren = PhotoImage(
            file=relative_to_assets("button_afkeuren.png"))
        button_afkeuren = Button(
            image=self.button_image_afkeuren,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("Het bericht is afgekeurd"),
            relief="flat"
        )
        button_afkeuren.place(
            x=673.0,
            y=784.0,
            width=448.0,
            height=99.0
        )

        self.button_image_goedkeuren = PhotoImage(
            file=relative_to_assets("button_goedkeuren.png"))
        button_goedkeuren = Button(
            image=self.button_image_goedkeuren,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("Het bericht is goedgekeurd"),
            relief="flat"
        )
        button_goedkeuren.place(
            x=81.0,
            y=784.0,
            width=503.0,
            height=99.0
        )

        canvas.create_text(
            81.0,
            207.0,
            anchor="nw",
            text="Voer uw naam in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            694.0,
            207.0,
            anchor="nw",
            text="Voer uw e-mail in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            81.0,
            368.0,
            anchor="nw",
            text="Het goed te keuren bericht:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            171.0,
            91.0,
            image=self.image_image_1
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(
            295.0,
            320.0,
            image=self.entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=91.0,
            y=289.0,
            width=408.0,
            height=60.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_2 = canvas.create_image(
            907.0,
            320.0,
            image=self.entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=703.0,
            y=289.0,
            width=408.0,
            height=60.0
        )

        self.image_message = PhotoImage(
            file=relative_to_assets("image_message.png"))
        image_2 = canvas.create_image(
            601.0,
            585.0,
            image=self.image_message
        )


class Zuil:
    def __init__(self, master, station):
        super().__init__()  # Om de init van tk.Tk op te roepen

        self.master = master
        self.master.title("Stationszuil")
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        messageLocations = [281.0, 356.0, 431.0, 506.0, 581.0]
        if station == STATION_AMERSFOORT:
            self.strStation = 'Amersfoort'
        elif station == STATION_DENBOSCH:
            self.strStation = '\'s-Hertogenbosch'
        elif station == STATION_UTRECHT:
            self.strStation = 'Utrecht'

        def placeMessage(yCoord, Message, Name):
            canvas.create_text(
                81.0,
                yCoord,
                anchor="nw",
                text=Message,
                fill="#000000",
                font=("Public Sans", 20 * -1)
            )

            canvas.create_text(
                81.0,
                yCoord,  # The difference in Y is Y + 32
                anchor="nw",
                text=f"~ {Name}",
                fill="#000000",
                font=("Public Sans", 20 * -1)
            )

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=924,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            674.0,
            1440.0,
            924.0,
            fill="#D9D9D9",
            outline="")

        canvas.create_text(
            81.0,
            216.0,
            anchor="nw",
            text=f"Wat vindt de reiziger van Station {self.strStation}?",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            171.0,
            91.0,
            image=self.image_image_1
        )

        self.image_image_weather = PhotoImage(
            file=relative_to_assets("image_weather.png"))
        image_weather = canvas.create_image(
            145.0,
            837.0,
            image=self.image_image_weather
        )

        canvas.create_text(
            303.0,
            747.0,
            anchor="nw",
            text="Luchtvochtigheid: ",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        canvas.create_text(
            300.0,
            833.0,
            anchor="nw",
            text="Verwachte weersomstandigheden: ",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        canvas.create_text(
            300.0,
            790.0,
            anchor="nw",
            text="Luchtdruk: ",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        canvas.create_text(
            886.0,
            790.0,
            anchor="nw",
            text="x%",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        canvas.create_text(
            886.0,
            747.0,
            anchor="nw",
            text="x%",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        canvas.create_text(
            886.0,
            833.0,
            anchor="nw",
            text="het gaat x regenen",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        canvas.create_text(
            886.0,
            704.0,
            anchor="nw",
            text="x graden Celcius",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        canvas.create_text(
            303.0,
            704.0,
            anchor="nw",
            text="Het is op het moment:",
            fill="#003082",
            font=("Public Sans", 32 * -1)
        )

        self.image_image_toilet = PhotoImage(
            file=relative_to_assets("image_toilet.png"))
        image_toilet = canvas.create_image(
            957.0,
            92.0,
            image=self.image_image_toilet
        )

        self.image_image_bike = PhotoImage(
            file=relative_to_assets("image_bike.png"))
        image_bike = canvas.create_image(
            1079.0,
            92.0,
            image=self.image_image_bike
        )

        self.image_image_pr = PhotoImage(
            file=relative_to_assets("image_pr.png"))
        image_pr = canvas.create_image(
            1202.0,
            92.0,
            image=self.image_image_pr
        )

        self.image_image_lift = PhotoImage(
            file=relative_to_assets("image_lift.png"))
        image_lift = canvas.create_image(
            1316.0,
            92.0,
            image=self.image_image_lift
        )


if __name__ == "__main__":
    root = tk.Tk()
    app = Opening(root)
    root.mainloop()

