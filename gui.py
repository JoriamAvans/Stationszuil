import tkinter as tk
import modules
# Some separate parts of this file were generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Canvas, Entry, Button, PhotoImage, ttk
import openweather
import csv

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r'assets')

SCREENRESOLUTION_X = 1920
SCREENRESOLUTION_Y = 1080
WINDOWPOSITION_X = (SCREENRESOLUTION_X / 2) - (1440 / 2)
WINDOWPOSITION_Y = (SCREENRESOLUTION_Y / 2) - (924 / 1) + 425

BTN_GEBRUIKER = 1
BTN_ADMIN = 2
STATION_AMERSFOORT = 3
STATION_DENBOSCH = 4
STATION_UTRECHT = 5


def relative_to_assets(path: str) -> Path:
    testVar = ASSETS_PATH / Path(path)
    return testVar


class Opening:
    def __init__(self, master):
        super().__init__()  # Om de init van tk.Tk op te roepen

        self.master = master
        self.master.title("Stationszuil beginpagina")
        # self.master.iconbitmap(relative_to_assets('image_1.ico'))
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        def home_button():
            self.master.destroy()
            self.master = tk.Tk()
            self.app = Opening(self.master)

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=924,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        canvas.place(x=0, y=0)
        canvas.create_text(
            419.0,
            308.0,
            anchor="nw",
            text="Welke ervaring wilt u simuleren?",
            fill="#000000",
            font=("Public Sans", 40 * -1)
        )

        self.button_image_gebruiker = PhotoImage(
            file=relative_to_assets("button_gebruiker.png"))
        button_gebruiker = Button(
            image=self.button_image_gebruiker,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(BTN_GEBRUIKER),
            relief="flat"
        )
        button_gebruiker.place(
            x=64.0,
            y=544.0,
            width=355.0,
            height=106.0
        )

        self.button_image_zuil_amersfoort = PhotoImage(
            file=relative_to_assets("button_zuil_amersfoort.png"))
        button_zuil_amersfoort = Button(
            image=self.button_image_zuil_amersfoort,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(STATION_AMERSFOORT),
            relief="flat"
        )
        button_zuil_amersfoort.place(
            x=467.0,
            y=411.0,
            width=505.0,
            height=106.0
        )

        self.button_image_zuil_denbosch = PhotoImage(
            file=relative_to_assets("button_zuil_denbosch.png"))
        button_zuil_denbosch = Button(
            image=self.button_image_zuil_denbosch,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(STATION_DENBOSCH),
            relief="flat"
        )
        button_zuil_denbosch.place(
            x=467.0,
            y=544.0,
            width=505.0,
            height=106.0
        )

        self.button_image_zuil_utrecht = PhotoImage(
            file=relative_to_assets("button_zuil_utrecht.png"))
        button_zuil_utrecht = Button(
            image=self.button_image_zuil_utrecht,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(STATION_UTRECHT),
            relief="flat"
        )
        button_zuil_utrecht.place(
            x=467.0,
            y=677.0,
            width=505.0,
            height=106.0
        )

        self.button_image_admin = PhotoImage(
            file=relative_to_assets("button_admin.png"))
        button_admin = Button(
            image=self.button_image_admin,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.new_window(BTN_ADMIN),
            relief="flat"
        )
        button_admin.place(
            x=1020.0,
            y=544.0,
            width=355.0,
            height=106.0
        )

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        # NS Image at the top
        self.image_image_NS = PhotoImage(
            file=relative_to_assets("image_NS.png"))
        button_image_NS = Button(
            image=self.image_image_NS,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: home_button(),
            relief="flat"
        )
        button_image_NS.place(
            x=82.0,
            y=58.0,
            width=181.0,
            height=67.0
        )

    def new_window(self, button):
        self.master.destroy()
        self.master = tk.Tk()

        if button == BTN_GEBRUIKER:
            self.app = Gebruiker(self.master)
        elif button == BTN_ADMIN:
            self.app = Admin(self.master)
        elif button == STATION_AMERSFOORT:
            self.app = Zuil(self.master, STATION_AMERSFOORT)
        elif button == STATION_DENBOSCH:
            self.app = Zuil(self.master, STATION_DENBOSCH)
        elif button == STATION_UTRECHT:
            self.app = Zuil(self.master, STATION_UTRECHT)

        self.master.mainloop()


class Gebruiker:
    def __init__(self, master):
        super().__init__()  # Om de init van tk.Tk op te roepen
        self.master = master
        self.master.title("Gebruikerspagina Stationszuil")
        # self.master.iconbitmap(relative_to_assets('image_1.ico'))
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        def checkData():
            message = entry_message.get()
            naam = entry_naam.get()
            if message != '':
                if len(message) > 140:
                    entry_message.delete(0, tk.END)
                    entry_message.insert(tk.END, 'Your message was too long, a maximum of 140 charcters is allowed. Please try again')

                else:
                    if naam == '':
                        naam = 'Anoniem'
                    userList = [message, naam]
                    modules.parseData(userList)
            else:
                entry_message.insert(tk.END, 'Please don\'t forget entering a message')
            self.master.destroy()
            self.master = tk.Tk()
            self.app = Gebruiker(self.master)

        def home_button():
            self.master.destroy()
            self.master = tk.Tk()
            self.app = Opening(self.master)

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=924,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        self.button_image_verzend = PhotoImage(
            file=relative_to_assets("button_verzend.png"))
        button_verzend = Button(
            image=self.button_image_verzend,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: checkData(),
            relief="flat"
        )
        button_verzend.place(
            x=81.0,
            y=784.0,
            width=428.0,
            height=99.0
        )

        canvas.create_text(
            81.0,
            207.0,
            anchor="nw",
            text="Voer uw naam in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            81.0,
            368.0,
            anchor="nw",
            text="Voer uw bericht in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        self.image_image_NS = PhotoImage(
            file=relative_to_assets("image_NS.png"))
        button_image_NS = Button(
            image=self.image_image_NS,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: home_button(),
            relief="flat"
        )
        button_image_NS.place(
            x=82.0,
            y=58.0,
            width=181.0,
            height=67.0
        )

        self.entry_image_naam = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_naam = canvas.create_image(
            295.0,
            320.0,
            image=self.entry_image_naam
        )
        entry_naam = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#003082",
            highlightthickness=0,
            font=("Public Sans", 25 * -1)
        )
        entry_naam.place(
            x=91.0,
            y=300.0,
            width=408.0,
            height=40.0
        )

        self.entry_image_message = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_2 = canvas.create_image(
            601.0,
            585.5,
            image=self.entry_image_message
        )
        entry_message = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#003082",
            highlightthickness=0,
            font=("Public Sans", 25 * -1),
        )
        entry_message.place(
            x=91.0,
            y=460.0,
            width=1020.0,
            height=40.0
        )


class Admin:
    def __init__(self, master):
        super().__init__()  # Om de init van tk.Tk op te roepen
        self.master = master
        self.master.title("Adminpagina Stationszuil")
        # self.master.iconbitmap(relative_to_assets('image_1.ico'))
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        def checkData(approval):
            if entry_naam.get() != '' and entry_mail.get() != '':
                modules.gui_moderateMessage(to_moderate, entry_naam.get(), entry_mail.get(), approval)
                self.master.destroy()
                self.master = tk.Tk()
                self.app = Admin(self.master)

        def home_button():
            self.master.destroy()
            self.master = tk.Tk()
            self.app = Opening(self.master)

        to_moderate = modules.getOldestFile()
        plainMessage = ''
        with open(to_moderate, 'r', newline='') as file:
            csvRead = csv.DictReader(file)
            for row in csvRead:
                plainMessage = row['Message']

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=924,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        self.image_image_NS = PhotoImage(
            file=relative_to_assets("image_NS.png"))
        button_image_NS = Button(
            image=self.image_image_NS,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: home_button(),
            relief="flat"
        )
        button_image_NS.place(
            x=82.0,
            y=58.0,
            width=181.0,
            height=67.0
        )

        self.button_image_afkeuren = PhotoImage(
            file=relative_to_assets("button_afkeuren.png"))
        button_afkeuren = Button(
            image=self.button_image_afkeuren,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: checkData(False),
            relief="flat"
        )
        button_afkeuren.place(
            x=673.0,
            y=784.0,
            width=448.0,
            height=99.0
        )

        self.button_image_goedkeuren = PhotoImage(
            file=relative_to_assets("button_goedkeuren.png"))
        button_goedkeuren = Button(
            image=self.button_image_goedkeuren,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: checkData(True),
            relief="flat"
        )
        button_goedkeuren.place(
            x=81.0,
            y=784.0,
            width=503.0,
            height=99.0
        )

        canvas.create_text(
            81.0,
            207.0,
            anchor="nw",
            text="Voer uw naam in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            694.0,
            207.0,
            anchor="nw",
            text="Voer uw e-mail in:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            81.0,
            368.0,
            anchor="nw",
            text="Het goed te keuren bericht:",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        self.entry_image_naam = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_naam = canvas.create_image(
            295.0,
            320.0,
            image=self.entry_image_naam
        )
        entry_naam = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#003082",
            highlightthickness=0,
            font=("Public Sans", 25 * -1)
        )
        entry_naam.place(
            x=91.0,
            y=300.0,
            width=408.0,
            height=40.0
        )

        self.entry_image_mail = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_mail = canvas.create_image(
            907.0,
            320.0,
            image=self.entry_image_mail
        )
        entry_mail = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#003082",
            highlightthickness=0,
            font=("Public Sans", 25 * -1)
        )
        entry_mail.place(
            x=703.0,
            y=300.0,
            width=408.0,
            height=40.0
        )

        self.image_message = PhotoImage(
            file=relative_to_assets("image_message.png"))
        image_2 = canvas.create_image(
            601.0,
            585.0,
            image=self.image_message
        )

        canvas.create_text(
            90.0,
            470.0,
            anchor="nw",
            text=plainMessage,
            fill="#003082",
            font=("Public Sans", 25 * -1)
        )


class Zuil:
    def __init__(self, master, station):
        super().__init__()  # Om de init van tk.Tk op te roepen

        self.master = master
        self.master.title("Stationszuil")
        # self.master.iconbitmap(relative_to_assets('image_1.ico'))
        self.master.configure(bg="#E6E6E9")
        self.master.geometry('%dx%d+%d+%d' % (1440, 924, WINDOWPOSITION_X, WINDOWPOSITION_Y))

        def home_button():
            self.master.destroy()
            self.master = tk.Tk()
            self.app = Opening(self.master)

        messageLocations = [281.0, 356.0, 431.0, 506.0, 581.0]
        if station == STATION_AMERSFOORT:
            self.strStation = 'Amersfoort'
        elif station == STATION_DENBOSCH:
            self.strStation = 'Den Bosch'
        elif station == STATION_UTRECHT:
            self.strStation = 'Utrecht'

        def placeMessage(yCoord, Message, Name):
            canvas.create_text(
                81.0,
                yCoord,
                anchor="nw",
                text=Message,
                fill="#000000",
                font=("Public Sans", 20 * -1)
            )

            canvas.create_text(
                81.0,
                yCoord,  # The difference in Y is Y + 32
                anchor="nw",
                text=f"~ {Name}",
                fill="#000000",
                font=("Public Sans", 20 * -1)
            )

        def weerbericht():
            weer_strStation = self.strStation
            if weer_strStation == 'Den Bosch':
                weer_strStation = '\'s-Hertogenbosch'
            weatherData = openweather.getWeather(weer_strStation)
            canvas.create_text(
                303.0,
                747.0,
                anchor="nw",
                text="Luchtvochtigheid: ",
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

            canvas.create_text(
                300.0,
                833.0,
                anchor="nw",
                text="Verwachte weersomstandigheden: ",
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

            canvas.create_text(
                300.0,
                790.0,
                anchor="nw",
                text="Luchtdruk: ",
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

            canvas.create_text(
                886.0,
                790.0,
                anchor="nw",
                text=f"{weatherData[2]} hPa",
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

            canvas.create_text(
                886.0,
                747.0,
                anchor="nw",
                text=f"{weatherData[1]}%",
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

            canvas.create_text(
                886.0,
                833.0,
                anchor="nw",
                text=weatherData[3],
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

            canvas.create_text(
                886.0,
                704.0,
                anchor="nw",
                text=f"{weatherData[0]}° Celcius",
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

            canvas.create_text(
                303.0,
                704.0,
                anchor="nw",
                text="Het is op het moment:",
                fill="#003082",
                font=("Public Sans", 32 * -1)
            )

        def faciliteiten():

            test = 1
            checkToilet = modules.readDatabaseStation('toilet', self.strStation)
            checkBike = modules.readDatabaseStation('ov_bike', self.strStation)
            checkPR = modules.readDatabaseStation('park_and_ride', self.strStation)
            checkLift = modules.readDatabaseStation('elevator', self.strStation)

            if len(checkToilet) != 0:
                self.image_image_toilet = PhotoImage(
                    file=relative_to_assets("image_toilet.png"))
                image_toilet = canvas.create_image(
                    957.0,
                    92.0,
                    image=self.image_image_toilet
                )
            if len(checkBike) != 0:
                self.image_image_bike = PhotoImage(
                    file=relative_to_assets("image_bike.png"))
                image_bike = canvas.create_image(
                    1079.0,
                    92.0,
                    image=self.image_image_bike
                )

            if len(checkPR) != 0:
                self.image_image_pr = PhotoImage(
                    file=relative_to_assets("image_pr.png"))
                image_pr = canvas.create_image(
                    1202.0,
                    92.0,
                    image=self.image_image_pr
                )

            if len(checkLift) != 0:
                self.image_image_lift = PhotoImage(
                    file=relative_to_assets("image_lift.png"))
                image_lift = canvas.create_image(
                    1316.0,
                    92.0,
                    image=self.image_image_lift
                )

        canvas = Canvas(
            self.master,
            bg="#E6E6E9",
            height=924,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_rectangle(
            0.0,
            674.0,
            1440.0,
            924.0,
            fill="#D9D9D9",
            outline="")

        canvas.create_text(
            81.0,
            216.0,
            anchor="nw",
            text=f"Wat vindt de reiziger van Station {self.strStation}?",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        canvas.create_rectangle(
            0.0,
            0.0,
            1440.0,
            185.0,
            fill="#FFC917",
            outline="")

        canvas.create_text(
            271.0,
            63.0,
            anchor="nw",
            text="Project: Stationszuil",
            fill="#003082",
            font=("Public Sans", 40 * -1)
        )

        self.image_image_NS = PhotoImage(
            file=relative_to_assets("image_NS.png"))
        button_image_NS = Button(
            image=self.image_image_NS,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: home_button(),
            relief="flat"
        )
        button_image_NS.place(
            x=82.0,
            y=58.0,
            width=181.0,
            height=67.0
        )

        self.image_image_weather = PhotoImage(
            file=relative_to_assets("image_weather.png"))
        image_weather = canvas.create_image(
            145.0,
            837.0,
            image=self.image_image_weather
        )

        weerbericht()
        faciliteiten()


if __name__ == "__main__":
    root = tk.Tk()
    app = Opening(root)
    root.mainloop()

